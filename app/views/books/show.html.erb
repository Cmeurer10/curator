
 
<%#= render "/books/platform-nav" %>

<div class="platform">
	<div class="row">
		<div class="col-md-8">
			<div class="book-content" id= "text" spellcheck="false">
				<%=  @chapter.html_safe%>
				<div id="newConvo" data-toggle="modal" data-target="#new-convo-modal">
					<%= image_tag "highlighter", class: "newConvoImage" %>
				</div>
			</div>
		</div>
		<div class="col-md-4" >
			<div class="conversation" id='sidebar'>
				<div class="threads-container">
					<div class="title">
						<i class="fa fa-minus inline" aria-hidden="true" id="convo-glyph"></i>
						<h2 id ="conversations-clickable">Highlights</h2>
					</div>
					<div id="conversations">
						<%= render "/books/sidebar/conversations" %>
					</div>
				</div>
				<div class="posts-container hidden">
					<div class="title">
						<i class="fa fa-minus inline" aria-hidden="true" id="post-glyph"></i>
						<h2 id="post-clickable"></h2>
					</div>
					<div id="posts">
					<!-- Content goes here from Posts -->

					</div>
					<div id="post-comment">

					</div>
				</div>
			</div>
		</div>
	</div>
</div>



<div class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" id='new-convo-modal'>
  <div class="modal-dialog modal-md" role="document">
    <div class="modal-content">
    	<div class="modal-header">
        	<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        	<h4 class="modal-title" id="myModalLabel">Start a Conversation</h4>
      	</div>
      	<div class="modal-body">
	        <%= render "/conversations/form" %>
      	</div>
    </div>
  </div>
</div>

<div class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" id='new-convo-modal-on-existing'>		 +
  <div class="modal-dialog modal-md" role="document">
    <div class="modal-content">
      <div class="modal-header">
 	<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
 	<h4 class="modal-title" id="myModalLabelOnExisting">Start a Conversation</h4>
      </div>
      <div class="modal-body">
        <%= render "/conversations/child_form" %>
      </div>
    </div>
  </div>
</div>



<% content_for :javascript do %>
  <script type="text/javascript">


     $(document).ready(function(){

     $('#submit').click(function(e) {
    	// e.preventDefault();
    	$('#new-convo-modal').modal('toggle'); //or  $('#IDModal').modal('hide');
    	$('#conversation').load("/books/refreshConvos")
    	
    	// return false;
	});
      $('#new-convo-submit').click(function(e) {
    	// e.preventDefault();
    	// Coding
    	$('#new-convo-modal-on-existing').modal('toggle'); //or  $('#IDModal').modal('hide');
    	// return false;
	});




     	highlightExistingConvos();
			function highlightExistingConvos(){
				<% @conversations.where(parent_id: nil).each do |convo| %>
					selectAndHighlightRange("text", <%= convo.start_index %>, <%= convo.end_index %>, <%= convo.id.to_s %>)
				<% end %>

			}

			function getTextNodesIn(node) {
			    var textNodes = [];
			    if (node.nodeType == 3) {
			        textNodes.push(node);
			    } else {
			        var children = node.childNodes;
			        for (var i = 0, len = children.length; i < len; ++i) {
			            textNodes.push.apply(textNodes, getTextNodesIn(children[i]));
			        }
			    }
			    return textNodes;
			}

			function setSelectionRange(el, start, end) {
			    if (document.createRange && window.getSelection) {
			        var range = document.createRange();
			        range.selectNodeContents(el);
			        var textNodes = getTextNodesIn(el);
			        var foundStart = false;
			        var charCount = 0, endCharCount;

			        for (var i = 0, textNode; textNode = textNodes[i++]; ) {
			            endCharCount = charCount + textNode.length;
			            if (!foundStart && start >= charCount && (start < endCharCount || (start == endCharCount && i <= textNodes.length))) {
			                range.setStart(textNode, start - charCount);
			                foundStart = true;
			            }
			            if (foundStart && end <= endCharCount) {
			                range.setEnd(textNode, end - charCount);
			                break;
			            }
			            charCount = endCharCount;
			        }

			        var sel = window.getSelection();
			        sel.removeAllRanges();
			        sel.addRange(range);
			    } else if (document.selection && document.body.createTextRange) {
			        var textRange = document.body.createTextRange();
			        textRange.moveToElementText(el);
			        textRange.collapse(true);
			        textRange.moveEnd("character", end);
			        textRange.moveStart("character", start);
			        textRange.select();
			    }
			}

			function makeEditableAndHighlight(colour, convo_id) {
			    sel = window.getSelection();
			    if (sel.rangeCount && sel.getRangeAt) {
			        range = sel.getRangeAt(0);
			    }
			    document.designMode = "on";
			    if (range) {
			        sel.removeAllRanges();
			        sel.addRange(range);
			    }
			    // Use HiliteColor since some browsers apply BackColor to the whole block
			    if (!document.execCommand("HiliteColor", false, colour)) {
			        document.execCommand("BackColor", false, colour);
			    }
					var listId = window.getSelection().focusNode.parentNode;
					$(listId).addClass("highlight");
					$(listId).attr('id', "convo-" + convo_id);
			    document.designMode = "off";
			}

			function highlight(colour, convo_id) {
			    var range, sel;
			    if (window.getSelection) {
			        // IE9 and non-IE
			        try {
			            if (!document.execCommand("BackColor", false, colour)) {
			                makeEditableAndHighlight(colour, convo_id);
			            }

			        } catch (ex) {
			            makeEditableAndHighlight(colour, convo_id)
			        }
			    } else if (document.selection && document.selection.createRange) {
			        // IE <= 8 case
			        range = document.selection.createRange();
			        range.execCommand("BackColor", false, colour);
			    }
			}

			function selectAndHighlightRange(id, start, end, convo_id) {
			    setSelectionRange(document.getElementById("text"), start, end);
			    highlight("#D7D7D7", convo_id);

			}

 	    $("a.threads").click(function(){
 	    	var topic = $(this).text();
 	    	var convo = $(this).attr('id');
	        $('#conversation-container').slideUp("slow");
	        $("#convo-glyph").removeClass('fa fa-minus inline');
	        $("#convo-glyph").addClass('fa fa-plus inline');
	        $(".posts-container").removeClass('hidden');
	        $("#post-clickable").text(topic);
	        // refresh(convo);
	        setTimeout(function() {
	        	postRefresh(convo)
	        }, 1000);
	        // setInterval(refresh, 1000);

		});
		$('#conversations-clickable').click(function() {
			/* Act on the event */
			$('#conversation-container').slideToggle("slow");

		    if ($('#conversation-container').is(":visible"))
			    {
			         $('#convo-glyph').toggleClass('fa fa-plus');
			         $('#convo-glyph').toggleClass('fa fa-minus');

			    }
			    else
			    {
			         $('#convo-glyph').toggleClass('fa fa-plus');
			         $('#convo-glyph').toggleClass('fa fa-minus');
			    }
		});
		$('#post-clickable').click(function() {
			/* Act on the event */
			$('#post-container').slideToggle("slow");

		    if ($('#post-container').is(":visible"))
			    {
			         $('#post-glyph').toggleClass('fa fa-plus');
			         $('#post-glyph').toggleClass('fa fa-minus');

			    }
			    else
			    {
			         $('#post-glyph').toggleClass('fa fa-plus');
			         $('#post-glyph').toggleClass('fa fa-minus');
			    }
		});

		// });
			// if(Curator === undefined){
		    	Curator = {};
		     // }
		$("#newConvo").click(function(event) {
			/* Act on the event */

			Curator.getHighlightRange();
			addHighlightEventListener();

		});
		 // $(document).bind('keypress',pressed);
		    var userSelection;
		    if (window.getSelection) {
		        userSelection = window.getSelection();
		    }
		    else if (document.selection) { // should come last; Opera!
		        userSelection = document.selection.createRange();
		    }

		    //NOTES:  1:  span.setAttribute "myHighlights"
		    //        2:

			Curator.getHighlightRange=function()
			    {
			    var selection= window.getSelection().getRangeAt(0);
			    var selectedText = selection.extractContents();
			    var span= document.createElement("span");

			    span.style.backgroundColor = "white";
			    span.appendChild(selectedText);
			    selection.insertNode(span);
			    span.setAttribute("class", "hightlighted");
			    
			    var start = ($('#text').text().search(selection));
			    start = parseInt(start);
			    var end = selection.toString().length + start;
			    end = parseInt(end);
			    var indexes = {};
			    	indexes.start = start;
			    	indexes.end = end;
			    $('#conversation_start_index').val(start);
			    $('#conversation_end_index').val(end);
			    

			    }
			// Curator.highlightRange=function(){
			// 	var selection= window.getSelection().getRangeAt(0);
			//     var selectedText = selection.extractContents();
			//     var span= document.createElement("span");
			//     span.style.backgroundColor = "yellow";
			//     span.appendChild(selectedText);
			//     selection.insertNode(span);
			// }

			// Curator.createThread=function(topic, start_index, end_index){
				// jQuery.ajax({
			 //      type: "POST",
			 //      url: "/books/<%= @book.id %>/conversations",
			 //      data: {  conversation: { topic: topic, start_index: start_index, end_index: end_index, user_id: "<%= current_user.id %>", book_id: "<%= @book.id %>" }},
			    // //   success:function(data) {
			    //     alert(data.id)
			    //     return false
			    // }
			    //   error: function(data){
			    //     return false
			    // }

			// }

		 //  function pressed(e)
		 //    {
			//     if(e.keyCode === 13)
			//     {
			//     	Curator.getHighlightRange();
			//     	$("#newConvo").click();
			//     }
			// }


		//
		// function refreshPosts() {
		//   $.ajax({
		//
		//   });
		// }
		//
	  // $('#new-post-btn').click(function() {
	  //   refreshPosts();
	  // });
	  // 		$('#submit').on('click', function(event) {
			// event.preventDefault();
			// /* Act on the event */
			// var indexes = Curator.hightlight();
			// Curator.createThread(<%#= :topic %>, indexes.start, indexes.end);
			// });


		function slide_show(ele) {
			var show = $(ele).hasClass('hidden');
			if (show) {
				$(ele).hide();
				$(ele).removeClass('hidden');
				$(ele).slideDown(400);
			} else {
				$(ele).slideUp(400, function() {
					$(ele).addClass('hidden');
					$(ele).show();
				});
			};
		};

		function getConvoElements(ele) {
			var a = $(ele).attr('id');
			var b = ".parent-convo-" + a.slice(6,);
			var c = "#convo-db-" + a.slice(6,);
			return {convo_css_id: a, convo_db_id_child: b, convo_db_id: c }
		}

		$(".highlight").hover(
			function() {
				convoElements = getConvoElements(this);
				if (!$(convoElements['convo_db_id']).hasClass('active-convo')){
					$(this).css("background-color", "yellow");
					slide_show(convoElements['convo_db_id_child']);
					slide_show(convoElements['convo_db_id']);
				}
			}, function() {
				convoElements = getConvoElements(this);
				if (!$(convoElements['convo_db_id']).hasClass('active-convo')){
					slide_show(convoElements['convo_db_id_child']);
					slide_show(convoElements['convo_db_id']);
					$(this).css("background-color", "#D7D7D7");
				}
			}
		);

		$(".highlight").click(function(e){
			$(".highlight").css("background-color", "#D7D7D7");
			$(this).css("background-color", "pink");
			convoElements = getConvoElements(this);
			$(".convo-instance").removeClass('active-convo');
			var not_hidden_nor_active = $(".convo-instance:not(.hidden)").filter(".convo-instance:not("+convoElements['convo_db_id']+")").filter(".convo-instance:not("+convoElements['convo_db_id_child']+")");
			not_hidden_nor_active.slideUp('slow', function() {
				not_hidden_nor_active.filter(".convo-instance:not("+convoElements['convo_db_id']+")").filter(".convo-instance:not("+convoElements['convo_db_id_child']+")").addClass('hidden');
			});

			$(convoElements['convo_db_id_child']).removeClass('hidden');
			$(convoElements['convo_db_id_child']).addClass('active-convo');
			$(convoElements['convo_db_id']).removeClass('hidden');
			$(convoElements['convo_db_id']).addClass('active-convo');
			if (!$('#conversation-container').is(':visible')) {;
				$('#conversation-container').slideToggle("slow");
			}
		});


		



		$('#new-convo-on-existing').click(function(){
			var parent_index = $('.active-convo').attr('id').slice(9,);
			$('#conversation_parent_id').val(parent_index);
			$('#new-convo-modal-on-existing').modal('show');
		});

	});

		function addHighlightEventListener(){
		  function slide_show(ele) {
			var show = $(ele).hasClass('hidden');
			if (show) {
				$(ele).hide();
				$(ele).removeClass('hidden');
				$(ele).slideDown(400);
			} else {
				$(ele).slideUp(400, function() {
					$(ele).addClass('hidden');
					$(ele).show();
				});
			};
		};

		function getConvoElements(ele) {
			var a = $(ele).attr('id');
			var b = ".parent-convo-" + a.slice(6,);
			var c = "#convo-db-" + a.slice(6,);
			return {convo_css_id: a, convo_db_id_child: b, convo_db_id: c }
		}
			$(".hightlighted").off();
			$(".hightlighted").hover(
					function() {
						convoElements = getConvoElements(this);
						if (!$(convoElements['convo_db_id']).hasClass('active-convo')){
							$(this).css("background-color", "yellow");
							slide_show(convoElements['convo_db_id_child']);
							slide_show(convoElements['convo_db_id']);
						}
					}, function() {
						convoElements = getConvoElements(this);
						if (!$(convoElements['convo_db_id']).hasClass('active-convo')){
							slide_show(convoElements['convo_db_id_child']);
							slide_show(convoElements['convo_db_id']);
							$(this).css("background-color", "#D7D7D7");
						}
					}
				);

				$(".hightlighted").click(function(e){
					$(".hightlighted").css("background-color", "#D7D7D7");
					$(this).css("background-color", "pink");
					$(".convo-instance").removeClass('active-convo');
					var not_hidden_nor_active = $(".convo-instance:not(.hidden)").filter(".convo-instance:not("+convoElements['convo_db_id']+")").filter(".convo-instance:not("+convoElements['convo_db_id_child']+")");
					not_hidden_nor_active.slideUp('slow', function() {
						not_hidden_nor_active.filter(".convo-instance:not("+convoElements['convo_db_id']+")").filter(".convo-instance:not("+convoElements['convo_db_id_child']+")").addClass('hidden');
					});

					$(convoElements['convo_db_id_child']).removeClass('hidden');
					$(convoElements['convo_db_id_child']).addClass('active-convo');
					$(convoElements['convo_db_id']).removeClass('hidden');
					$(convoElements['convo_db_id']).addClass('active-convo');
					if (!$('#conversation-container').is(':visible')) {;
						$('#conversation-container').slideToggle("slow");
					}
				});

		}	
  

	var timeOut = null;

		function postRefresh(convo) {{

		  $.ajax({
		    type: "GET",
		    url: "/books/<%= @book.id %>/conversations/" + convo + "/posts/refresh_part",
		    success:function(data) {
		         	        timeOut = setTimeout(function() {
					        	postRefresh(convo)
					        }, 3000);
		         	        // timeOut = setTimeout(postRefresh(convo), 1000);
			        return false
			    }
		  });
		  };

		  };

		  function convoRefresh() {{

		  $.ajax({
		    type: "GET",
		    url: "/books/<%= @book.id %>/conversations/"
		  	});
		  };

		  };





  </script>

<% end %>
